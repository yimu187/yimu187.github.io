{"version":3,"sources":["component/StickyLayout.js","App.js","serviceWorker.js","index.js"],"names":["menuStyle","border","borderRadius","boxShadow","marginBottom","marginTop","transition","fixedMenuStyle","backgroundColor","overlayStyle","float","margin","fixedOverlayStyle","position","top","zIndex","overlayMenuStyle","left","fixedOverlayMenuStyle","Paragraph","StickyLayout","state","menuFixed","overlayFixed","handleOverlayRef","c","overlayRect","setState","_","pick","getBoundingClientRect","stickOverlay","stickTopMenu","unStickOverlay","unStickTopMenu","this","Container","text","style","Header","as","Visibility","onBottomPassed","onBottomVisible","once","Menu","borderless","fixed","undefined","Dropdown","pointing","className","offset","onTopPassed","onTopVisible","ref","icon","vertical","Item","Popup","content","trigger","Icon","name","link","onClick","window","open","href","Component","App","textAlign","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8884d371.chunk.js","sourcesContent":["import _ from 'lodash'\r\nimport React, { Component } from 'react'\r\nimport {\r\n    Container,\r\n    Dropdown,\r\n    Header,\r\n    Icon,\r\n    Image,\r\n    Menu,\r\n    Visibility,\r\n    Popup\r\n} from 'semantic-ui-react'\r\n\r\nconst menuStyle = {\r\n    border: 'none',\r\n    borderRadius: 0,\r\n    boxShadow: 'none',\r\n    marginBottom: '1em',\r\n    marginTop: '4em',\r\n    transition: 'box-shadow 0.5s ease, padding 0.5s ease',\r\n}\r\n\r\nconst fixedMenuStyle = {\r\n    backgroundColor: '#fff',\r\n    border: '1px solid #ddd',\r\n    boxShadow: '0px 3px 5px rgba(0, 0, 0, 0.2)',\r\n}\r\n\r\nconst overlayStyle = {\r\n    float: 'left',\r\n    margin: '0em 3em 1em 0em',\r\n}\r\n\r\nconst fixedOverlayStyle = {\r\n    ...overlayStyle,\r\n    position: 'fixed',\r\n    top: '80px',\r\n    zIndex: 10,\r\n}\r\n\r\nconst overlayMenuStyle = {\r\n    position: 'relative',\r\n    left: 0,\r\n    transition: 'left 0.5s ease',\r\n}\r\n\r\nconst fixedOverlayMenuStyle = {\r\n    ...overlayMenuStyle,\r\n    left: '800px',\r\n}\r\n\r\nconst Paragraph = () => (\r\n    <div>\r\n        <p>Hakkımda Kısa Bilgi...</p>\r\n        <p>Trabzon Maçka'da doğdum.</p>\r\n        <p>Karadeniz Ereğli'de Büyüdüm.</p>\r\n        <p>Yıldız Teknik Üniversiyesi Elektronik ve Haberleşme Mühendisliği Mezunuyum</p>\r\n        <p>Kod Yazmayı, Yeni Teknolojiler Öğrenip Uygulamayı Çok Severim</p>\r\n        <p>Yakında Araştırıp Öğrendiğim Yeni Teknolojileri Makaleler Kısmında Paylaşıyor Olacağım.</p>\r\n        <p>İletişim için Sol Tarafı Kullanabilirsiniz.</p>\r\n    </div>\r\n)\r\n\r\nexport default class StickyLayout extends Component {\r\n    state = {\r\n        menuFixed: false,\r\n        overlayFixed: false,\r\n    }\r\n\r\n    handleOverlayRef = (c) => {\r\n        const { overlayRect } = this.state\r\n\r\n        if (!overlayRect) {\r\n            this.setState({ overlayRect: _.pick(c.getBoundingClientRect(), 'height', 'width') })\r\n        }\r\n    }\r\n\r\n    stickOverlay = () => this.setState({ overlayFixed: true })\r\n\r\n    stickTopMenu = () => this.setState({ menuFixed: true })\r\n\r\n    unStickOverlay = () => this.setState({ overlayFixed: false })\r\n\r\n    unStickTopMenu = () => this.setState({ menuFixed: false })\r\n\r\n    render() {\r\n        const { menuFixed, overlayFixed, overlayRect } = this.state\r\n\r\n        return (\r\n            <div>\r\n                <Container text style={{ marginTop: '2em' }}>\r\n                    <Header as='h1'>Murat YILMAZ</Header>\r\n                    <p>\r\n                        Yazılım Zanaatkârı\r\n                    </p>\r\n                </Container>\r\n\r\n                <Visibility\r\n                    onBottomPassed={this.stickTopMenu}\r\n                    onBottomVisible={this.unStickTopMenu}\r\n                    once={false}\r\n                >\r\n                    <Menu\r\n                        borderless\r\n                        fixed={menuFixed ? 'top' : undefined}\r\n                        style={menuFixed ? fixedMenuStyle : menuStyle}\r\n                    >\r\n                        <Container text>\r\n                            <Menu.Menu position='right'>\r\n                                <Dropdown text='Makaleler' pointing className='link item'>\r\n                                    <Dropdown.Menu>\r\n                                        {/*<Dropdown.Item>List Item</Dropdown.Item>*/}\r\n                                        {/*<Dropdown.Item>List Item</Dropdown.Item>*/}\r\n                                        {/*<Dropdown.Divider />*/}\r\n                                        {/*<Dropdown.Header>Header Item</Dropdown.Header>*/}\r\n                                        {/*<Dropdown.Item>*/}\r\n                                        {/*    <i className='dropdown icon' />*/}\r\n                                        {/*    <span className='text'>Submenu</span>*/}\r\n                                        {/*    <Dropdown.Menu>*/}\r\n                                        {/*        <Dropdown.Item>List Item</Dropdown.Item>*/}\r\n                                        {/*        <Dropdown.Item>List Item</Dropdown.Item>*/}\r\n                                        {/*    </Dropdown.Menu>*/}\r\n                                        {/*</Dropdown.Item>*/}\r\n                                        {/*<Dropdown.Item>List Item</Dropdown.Item>*/}\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n                            </Menu.Menu>\r\n                        </Container>\r\n                    </Menu>\r\n                </Visibility>\r\n\r\n                <Container text>\r\n                    <Visibility\r\n                        offset={80}\r\n                        once={false}\r\n                        onTopPassed={this.stickOverlay}\r\n                        onTopVisible={this.unStickOverlay}\r\n                        style={overlayFixed ? { ...overlayStyle, ...overlayRect } : {}}\r\n                    />\r\n\r\n                    <div ref={this.handleOverlayRef} style={overlayFixed ? fixedOverlayStyle : overlayStyle}>\r\n                        <Menu\r\n                            icon='labeled'\r\n                            style={overlayFixed ? fixedOverlayMenuStyle : overlayMenuStyle}\r\n                            vertical\r\n                        >\r\n                            <Menu.Item>\r\n                                <Popup content='www.twitter.com/yimu187'\r\n                                       trigger={\r\n                                           <Icon name='twitter' link  onClick={()=> window.open(\"https://www.twitter.com/yimu187\")} />\r\n                                       } />\r\n                                Twitter\r\n                            </Menu.Item>\r\n\r\n                            <Menu.Item>\r\n                                <Popup content='www.instagram.com/yimu187'\r\n                                       trigger={\r\n                                           <Icon name='instagram' link onClick={()=> window.open(\"https://www.instagram.com/yimu187\")} />\r\n                                       } />\r\n                                Instagram\r\n                            </Menu.Item>\r\n\r\n                            <Menu.Item>\r\n                                <Popup content='www.github.com/yimu187'\r\n                                       trigger={\r\n                                           <Icon name='github' link onClick={()=> window.open(\"https://www.github.com/yimu187\")} />\r\n                                       } />\r\n                                GitHub\r\n                            </Menu.Item>\r\n\r\n                            <Menu.Item href=\"mailto:yimu187@gmail.com\">\r\n                                <Popup content='yimu187@gmail.com' trigger={<Icon name='mail' link />} />\r\n                                Email\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </div>\r\n\r\n                    <Paragraph />\r\n\r\n                </Container>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport {\n   Button,Segment, Flag\n} from 'semantic-ui-react';\n\nimport StickyLayout from \"./component/StickyLayout\";\n\nfunction App() {\n  return (\n    <div style={{textAlign : 'center'}}>\n        <StickyLayout/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}